#!/bin/bash

job="$1"

jobID="$(echo "${job}" | jq -r .jobID)"
printf "got job with id \"%s\" from work queue\n" "${jobID}"

jobType="$(echo "${job}" | jq -r .jobType)"

if [ "${jobType}" != "transcode" ]; then
    printf "unexpected job type \"%s\"!\n" "${jobType}"
    exit 1
fi

sourceEncoding="$(echo "${job}" | jq -r .job.sourceEncoding)"
targetEncoding="$(echo "${job}" | jq -r .job.targetEncoding)"
fileID="$(echo "${job}" | jq -r .job.fileID)"

# fetch details about the video file
if ! videoDetails="$(get-file-details "${fileID}")"; then   
    echo "failed to fetch video details!"
    exit 1
fi


# create empty temp files for source file and converted file
targetFile="$(mktemp tmpvideofileXXXXX."${targetEncoding}")"

# download original video
if ! download-video "${fileID}" "${fileID}"; then
    echo "failed to download video file!"
    exit 1
fi

if [[ "${sourceEncoding}" == "mp4" && "${targetEncoding}" == "webm" ]]; then   
    mp4-to-webm "${fileID}" "${targetFile}"
elif [[ "${sourceEncoding}" == "webm" && "${targetEncoding}" == "mp4" ]]; then
    webm-to-mp4 "${fileID}" "${targetFile}"
else
    printf "unsupported transcoding combination: %s -> %s\n" "${sourceEncoding}" "${targetEncoding}"
    exit 1
fi

# upload result
upload-video "${targetFile}" "${videoDetails}"